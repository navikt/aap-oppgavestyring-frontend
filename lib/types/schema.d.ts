/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/avklaringsbehov': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['no.nav.aap.oppgave.opprett.AvklaringsbehovRequest'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['no.nav.aap.oppgave.OppgaveId'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/neste-oppgave': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['no.nav.aap.oppgave.plukk.NesteOppgaveRequest'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['no.nav.aap.oppgave.plukk.NesteOppgaveResponse'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/filter': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['no.nav.aap.oppgave.filter.Filter'][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    'no.nav.aap.oppgave.OppgaveId': {
      /** Format: int64 */
      id: number;
    };
    'no.nav.aap.oppgave.filter.Filter': {
      avklaringsbehovKoder: components['schemas']['no.nav.aap.oppgave.opprett.AvklaringsbehovKode'][];
      /** Format: int64 */
      id: number;
      navn: string;
    };
    'no.nav.aap.oppgave.opprett.AvklaringsbehovKode': {
      kode: string;
    };
    'no.nav.aap.oppgave.opprett.AvklaringsbehovRequest': {
      avklaringsbehovKode: components['schemas']['no.nav.aap.oppgave.opprett.AvklaringsbehovKode'];
      /**
       * Format: date-time
       * @example 2024-09-12T14:57:46.175126
       */
      behandlingOpprettet: string;
      behandlingRef: components['schemas']['no.nav.aap.oppgave.opprett.BehandlingRef'];
      saksnummer: components['schemas']['no.nav.aap.oppgave.opprett.Saksnummer'];
    };
    'no.nav.aap.oppgave.opprett.BehandlingRef': {
      /** Format: uuid */
      uuid: string;
    };
    'no.nav.aap.oppgave.opprett.Saksnummer': Record<string, never>;
    'no.nav.aap.oppgave.plukk.NesteOppgaveRequest': {
      /** Format: int64 */
      filterId: number;
    };
    'no.nav.aap.oppgave.plukk.NesteOppgaveResponse': {
      /** @enum {string} */
      kilde: 'BEHANDLINGSFLYT' | 'MOTTAK';
      oppgaveId: components['schemas']['no.nav.aap.oppgave.OppgaveId'];
      referanse: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
